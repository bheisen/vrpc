#!/usr/bin/env node

'use strict'

const { ArgumentParser } = require('argparse')
const VrpcAgent = require('./VrpcAgent')
const path = require('path')

const parser = new ArgumentParser({
  addHelp: true,
  description: 'Starts a vrpc agent for node.js'
})
parser.addArgument(
  ['-d', '--domain'],
  {
    help: 'The prefix for all vrpc communication',
    type: 'string',
    required: true
  }
)
parser.addArgument(
  ['-a', '--agent'],
  {
    help: 'Name of the agent for remote addressing',
    type: 'string',
    required: true
  }
)
parser.addArgument(
  ['-t', '--token'],
  {
    help: 'Token for authentication and authorization',
    type: 'string'
  }
)
parser.addArgument(
  ['-f', '--file'],
  {
    help: 'Name of the binding file (Default is \'PATH/binding.js\')',
    type: 'string',
    defaultValue: './binding.js'
  }
)
parser.addArgument(
  ['-b', '--broker'],
  {
    help: 'The broker to use',
    type: 'string',
    defaultValue: 'mqtts://vrpc.io:8883'
  }
)

const args = parser.parseArgs()

// Load the bindings
try {
  require(path.join(process.cwd(), args.file))
} catch (err) {
  console.error('Could not find \'binding.js\' file')
  process.exit(1)
}

// Start the agent
const { domain, agent, broker, token } = args
const vrpcAgent = new VrpcAgent({ domain, agent, broker, token })

vrpcAgent.serve().catch(err => {
  console.error(`Error happened on agent: ${err.message}`)
})
